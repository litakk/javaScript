// MODULES - МОДУЛИ - МОДУЛЬ

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// ОПИСАНИЕ ТЕМЫ:
// script - является уже программой - файл - если он что-то исполняет уже является программой. 
// console в GOOGLE так же является продолжением Java Script 
// string + number = string
// number + number = number
// 0 не делиться =>     10 / 2  -  infinity 
// 10 / 2 => делить на 2 
// функция принимает в конце себя ()
//  "5" + 5 => 55 - - - "Hello " + 5 => "Hello 5"
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// %  => остаток от деления/даёт проценты
// 2 ** 2 - степень 2 умножает 2 раза 
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// ++  => добавляет единицу
// let x = 5  => ++x - сначало покажет результат потом само содержимое переменной x
// let x = 5  => x++ - сначало покажет содержимое x а потом уже результат
// --  => минусует единицу
// let x = 5  => --x - сначало результат потом сам x  
// let x = 5  => x-- - сначало x потом результат
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// == => проверяет true/false - равен ли ... этому ... - А ТАК ЖЕ НЕ ОБРАЩАЕТ ВНИМАНИЕ НА ТИП ДАННЫХ
// let x == 5
// console.log(x == 5)  => true
// console.log(x == "5")  => true
// console.log(x == 10) => false
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// === => отличается от == тем что проверяет равен ли ... к ...  - И ПРОВЕРЯЕТ ТИП ДАННЫХ
// let x = 5
// console.log(5 === "5")   
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// let = 5
// console.log( x + 5) - х не обновляется внутри себя и так же держит в себе 5
// console.log( x += 5) - += обновляет внутри и сохраняет x = 10
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// integer => 123 целое число
// float => 123.623 - не целое число
// complex = цифры + буквы 
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// // .toFixed()
// let number = 3.14159;
// let result = number.toFixed(2); // Нужно указать, сколько значений показать после точки
// console.log(result);
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// parse - анализировать - int - цифры

// parseInt() => переводит "5" в число
// parseInt() =>  "text" NaN - Not a number
// parseInt() =>  "x1" - если сначала увидит число до текста выдаст number
// parseInt() => let m = 123.314 - выдаст целое число 
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


// eval() - обычный калькулятор
// let calc = eval(" (100 - 1 + 10 - 9) / 10 ")
// console.log(calc)

// && - 1 не правильно FALSE
// OR - 1 правильно TRUE
//  1 != 1 => False 
// 1 != 2 => True 

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// если там число мы хотим True взять
// если там буквы мы хотим число взять
// let x = "123"
// console.log(!isNaN(x))

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

// console.log(isNaN("123")) => false - Число Not a number - даёт FALSE, потому что всё число
// console.log(isNaN("a123")) => true - 


// let a = "Hello World"
// console.log(!isNaN(123))

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 












// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

// Задания 
// 2 числа - найдите наибольшее число
// 3 числа - найдите наибольшее число

// let x = 100
// let c = 50

// if ( x > c ) {
//     console.log(x)
// }
// else {
//     console.log(c)
// }

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

// function findLargestNumber(a, b, c) {
//     if (a >= b && a >= c) {
//       return a;
//     } else if (b >= a && b >= c) {
//       return b;
//     } else {
//       return c;
//     }
//   }

//   let number1 = 10;
//   let number2 = 20;
//   let number3 = 15;
  
//   let largestNumber = findLargestNumber(number1, number2, number3);
//   console.log("Самое большое число: " + largestNumber);

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 