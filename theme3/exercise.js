//  –ó–∞–¥–∞–Ω–∏–µ - 1

//  –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ "This is testtext" —Ä–∞–≤–Ω–∞ 16, –∏ –ø–æ—Å–∫–æ–ª—å–∫—É 16 –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 2 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞,
//  –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π r –±—É–¥–µ—Ç –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ true. –°–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ "Result: true".
//  –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –∫–æ–¥ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ —á–µ—Ç–Ω—ã–º —á–∏—Å–ª–æ–º, –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —ç—Ç–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏. 

//  let x = "This is testtext"
//  let r = x.length % 2 == 0
//  console.log("Result: ", r)

//  ------------------------------------

//  –ó–∞–¥–∞–Ω–∏–µ - 2

//  let z = "Vladimir Vladimirovich Putin";
//  let first_space = z.indexOf(" ")
//  let last_space = z.lastIndexOf(" ")

//  let first_name = z.slice(0, first_space)
//  let middle_name = z.slice(first_space+1, last_space)
//  let last_name = z.slice(last_space+1)

//  console.log(first_name[0] + ". " + middle_name[0] + " " + last_name)

//  V. V Putin



//  ------------------------------------



// let x = "Hello world"
//  slice() 
//  Exercise 1: –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ str. –í–∞–º –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –ø–µ—Ä–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É —Å—Ç—Ä–æ–∫–∏, –∏—Å–ø–æ–ª—å–∑—É—è slice().
//  –ù–∞–ø—Ä–∏–º–µ—Ä: "C—Ç—Ä–æ–∫–∞" => "C—Ç—Ä"
// let middle = parseInt(x.length / 2)
// console.log(x.slice(0, middle))
//  ------------------------------------------
//  Exercise 2: –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ str. –í–∞–º –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∏ —Å–∏–º–≤–æ–ª–∞ —Å—Ç—Ä–æ–∫–∏, –∏—Å–ø–æ–ª—å–∑—É—è slice().
//  –ù–∞–ø—Ä–∏–º–µ—Ä: "C—Ç—Ä–æ–∫–∞" => "–æ–∫–∞"
// console.log(x.slice(x.length-3))
//==================================================================================================
//  replace()
//  Exercise 1: –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ str, –∑–∞–º–µ–Ω–∏—Ç–µ –≤—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –±—É–∫–≤—ã "a" –Ω–∞ –±—É–∫–≤—É "e", –∏—Å–ø–æ–ª—å–∑—É—è replace().
//  –ù–∞–ø—Ä–∏–º–µ—Ä: "–ê—Ç–æ–º–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è" => "–µ—Ç–æ–º–Ωe—è —Å—Çe–Ω—Üe—è
// x = "–ê—Ç–æ–º–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è"
// console.log(x.replace(/–∞/gi, 'e'))
//  ------------------------------------------
//  Exercise 2: –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ str, –∑–∞–º–µ–Ω–∏—Ç–µ –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —Å–ª–æ–≤–∞ "world" –Ω–∞ —Å–ª–æ–≤–æ "universe", –∏—Å–ø–æ–ª—å–∑—É—è replace().
//  –ù–∞–ø—Ä–∏–º–µ—Ä: "Hello world" => "Hello universe"
// x = "Hello World"
// console.log(x.replace(/world/ig, "universe"))
//==================================================================================================
//  padStart and padEnd
//  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –º–µ—Ç–æ–¥—ã, —á—Ç–æ–±—ã —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ–≤–æ, –µ—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å–ª–æ–≤–∞ –º–µ–Ω—å—à–µ –æ–∂–∏–¥–∞–µ–º–æ–π.
//  –ù–∞–ø—Ä–∏–º–µ—Ä: "Hello"   =>  "***Hello***"
// x = "Hello"
// let r = x.padStart(x.length+3, "*")
// r = r.padEnd(r.length+3, "*")
// console.log(r)
//==================================================================================================


//  INTERMEDIATE EXERCISES
//============================================
//  2. You have a string and devide it into two parts from the middle. Then repeat each part n times
//  RU: –£ –≤–∞—Å –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞ –∏ –≤—ã –µ–µ –¥–µ–ª–∏–µ—Ç–µ –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏ –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ. 
//  –ó–∞—Ç–µ–º –ø–æ–≤—Ç–æ—Ä—è–µ—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å n —Ä–∞–∑

//  Example:
//  let test_string = "..."
//  let n = ...
//  EXAMPLE - 1:    
//  INPUT:  
// let test_string = "Hello world"
// let n = 2
//  OUTPUT: "HelloHello  WorldWorld"
//  -------------
//  EXAMPLE - 2:    
//  –î–∞—ë–º:  
// let test_string2 = "Farzod"
// let n2 = 2
//  –ë–µ—Ä—ë–º: "VladVladVladimirimirimir"
//  RU: –®–ê–ì–ò:
//  1. –ù–∞–π–¥–∏—Ç–µ —Å–µ—Ä–µ–¥–∏–Ω—É —Å—Ç—Ä–æ–∫–∏
//  2. –†–∞–∑–¥–µ–ª–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏
//  3. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å n —Ä–∞–∑ –∏ –æ–±—ä–µ–¥–∏–Ω–∏—Ç–µ –∏—Ö

// let middle2 = parseInt(test_string2.length/2)
// let firstPart = test_string2.slice(0, middle2)
// let secondPart = test_string2.slice(middle2)
// console.log(firstPart.repeat(n2) + " üéØ " +  secondPart.repeat(n2))
//==================================================================================================

//  3. You have some kind of string. You have to get the first letter and replace it in all other 
//  places except first occurence with any kind of wanted sign  "$, #, @, *, ...". 
//  RU: –£ –≤–∞—Å –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞. –í–∞–º –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∏ –∑–∞–º–µ–Ω–∏—Ç—å –µ–µ –≤–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
//  –º–µ—Å—Ç–∞—Ö –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –Ω–∞ –ª—é–±–æ–π –∂–µ–ª–∞–µ–º—ã–π –∑–Ω–∞–∫ "$, #, @, *, ..."
//  -------------
//  INPUT:
// let string = "Xusen Xello xXx"
// let symbol = "$"
// let firstLetter = string[0]
//  string = string.toLowerCase().replaceAll(firstLetter.toLowerCase(), symbol)
// console.log(firstLetter + string.slice(1))
//  OUTPUT:  "This is $es$ $ex$"
//==================================================================================================