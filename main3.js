// JS - читает слева на право - сверху вниз

//  Есть 3 вида вывода: лог(1) варнинг(2) эррор(3) 

// Есть 3 вида ковычек: двойные(1), одинарные(2), боковые(3)- для ${}  
// И есть тройные ковычки """...""" - это комменты или же описание

//  8 типов данных - string, number, bigint, boolean-true/false, undefined, null, symbol, object.

// use strict - Фраза "use strict" в JavaScript используется для установки строгого режима выполнения кода. 

// Есть 3 вида variables - var, let, const 
// var   - можно менять содержимое переменной, может зайти в блок и может выйти и быть использованным везде
// let   - можно менять содержимое переменной, может зайти в блок но не выйти из него 
// const - нельзя менять содержимое переменной, может зайти в блок но не выйти из него

// - - - SYNTAX  - - -
// ключевое-слово имя-переменной = значение


// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


// text + number = text







// console.log("Hello world")   // string
// console.warn("Hello world")  // string
// console.error("Hello world") // string

// 3 вида ковычек "", '', `` .
// console.log("This is 'ME'")

//  - - - -   - - - -   - - - -   - - - -   - - - -   - - - -  

// 1. String - тип данных, который даёт текст
// 2. Number - тип данных, который даёт цифры
// 3. Bigint - больше 17 цифр он не понимает поэтому нужен bigint
// 4. Boolean = true/false (истина/ложь)
// 5. Undefined - не определённость (если есть ящик но он пустой)
// 6. Null - пусто (когда хотим сами)
// 7. Symbol - символы
// 8. Object - любой объект 

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// "use strict" - формальный вид программирования

// fruits = "Orange, Banana, Apple ..." // не формальный вид...
// console.log(fruits)

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// var = fruits = "Orange, Banana, Apple ..." - Глобальный, может работать везде, внутри - снаружи блока - можно обновить название
// console.log(fruits)

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// {
// let = fruits = "Orange, Banana, Apple ..." - Локальный, не может работать ВНЕ БЛОКА КОДА - можно обновить название
// }
// console.log(fruits) - нельзя вызвать ВНЕ БЛОКА КОДА- выдаст ошибку

// Объяснение: В доме есть кондиционер, он не может быть использован вне комнаты 

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// const = fruits = "Orange, Banana, Apple ..." - ЛОКАЛЬНЫЕ, могут зайти в дом но не могут выйти, нельзя изменить, только 1 название!
// console.log(fruits)

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// VARIABLES 
// var x = "Var test"
// let z = "Let test"
// const y = "Const test"

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// {
//     {
//         var x = " ...Var "
//         z = " ...Let "
//     }
// }

// y = "..."
// console.log(y)

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// - - - SYNTAX  - - -
// keyword variables-name = value
// ключевое-слово имя-переменной = значение

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// let test = "My test text"
// console.log("This is: " + test)

// let test = "My test text"
// console.log(`This is: ${test}`) - наклонные ковычки нужны для того что бы вставить переменную в string

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// console.log(`
// This is 
// test test
// from AC!!!
// `)

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// Домашнее задание - информация о себе - для каждого типа по 50 переменных 

// let myName = "Alex"
// let myAge = "32"
// console.log(`

// My name is ${myName}.
// I am ${myAge} years old.

// `)

// var x = - использовать много где
// let x = иногда обновлять x = "..."
// const = использовать только 1 раз




// let a = typeof("Test" + 123)
// console.log(a)



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// MODULES

// script - является уже программой - файл - если он что-то исполняет является программой. 
// console в GOOGLE является продолжением JS 
// string + number = string
// number + number = number

// 10 / 2 => делить на 2 
// %  => остаток от деления/даёт проценты
// 2 ** 2

// ++ => добавляет единицу
// let x = 5 = ++x - сначало результат потом сам x  
// let x = 5 = x++ - сначало x потом результат
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// -- => минусует единицу
// let x = 5 = --x - сначало результат потом сам x  
// let x = 5 = x-- - сначало x потом результат
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// == => проверяет true/false - равен ли ... этому ...
// let x == 5
// console.log(x == 5)  => true
// console.log(x == "5")  => true
// console.log(x == 10) => false
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// === => отличается от == тем что проверяет равен ли ... к ... и проверяет тип данных  
// let x = 5
// console.log(5 === "5") 

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// let = 5
// console.log( x + 5) - х остаётся 5
// console.log( x += 5) - += сохраняет x = 10

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// integer => 123 целое число
// float => 123.623 - не целое число
// complex = цифры + буквы 


// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// parse - анализировать - int - цифры
//  "5" + 5 => 55
// "Hello " + 5 => "Hello 5"

// parseInt() => переводит "5" в число
// parseInt() =>  "text" NaN - Not a number
// parseInt() =>  "x1" - если сначала увидит число до текста выдаст number
// prseInt() => let m = 123.314 - выдаст целое число 

// let a = "15" =>  
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

// функция принимает в конце себя ()

// eval() - обычный калькулятор
// let calc = eval(" (100 - 1 + 10 - 9) / 10 ")
// console.log(calc)

// && - 1 не правильно FALSE
// OR - 1 правильно TRUE
//  1 != 1 => False 
// 1 != 2 => True 

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
// если там числj мы хотим True взять
// если там буквы мы хотим число взять
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

// console.log(isNaN("123")) => false - Число Not a number - даёт FALSE, потому что всё число
// console.log(isNaN("a123")) => true - 


// let a = "Hello World"
// console.log(!isNaN())





